{"version":3,"file":"static/js/396.3e255bbb.chunk.js","mappings":"iMAAaA,EAAU,CACrB,CACEC,SAAS,GACTC,KAAM,UACNC,MAAO,WAET,CACEF,SAAS,aACTC,KAAM,aACNC,MAAO,cAET,CACEF,SAAS,YACTC,KAAM,YACNC,MAAO,aAGT,CAEED,KAAM,gBACNC,MAAO,kB,SClBI,SAASC,EAASC,GAC/B,OACE,8BACCL,GACGA,EAAQM,KAAI,SAACC,EAAMC,GAAP,OACV,+BACE,mBAAQC,UAAU,WAEhBN,MAAOI,EAAKJ,MACZO,QAASL,EAAMM,cACfC,MAAO,CACLC,gBACER,EAAMS,WAAaP,EAAKJ,MAAQ,sBAAwB,IAN9D,SASGI,EAAKL,MARDM,IAHC,KAiBnB,C,4CCfc,SAASO,IAItB,OAAgCC,EAAAA,EAAAA,UAAS,MAAzC,eAAOF,EAAP,KAAiBG,EAAjB,KACA,GAA4CD,EAAAA,EAAAA,UAAS,MAArD,eAAOE,EAAP,KAAuBC,EAAvB,KAEMC,GAAqBC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,SAC1C,GAA0BN,EAAAA,EAAAA,UAAS,IAAnC,eAAOO,EAAP,KAAcC,EAAd,KAEIC,EAAa,GAEXC,EAAQ,yCAAG,gGACfC,QAAQC,IAAI,oBADG,UAEIC,EAAAA,EAAAA,IAAQT,GAFZ,OAETU,EAFS,OAGfN,EAASM,EAAKC,KAAKzB,KAAI,SAAC0B,GAAD,eAAC,UAAaA,EAAIF,QAAlB,IAA0BG,GAAID,EAAIC,IAAlC,KAEvBR,EAAaK,EAAKC,KAAKzB,KAAI,SAAC0B,GAAD,eAAC,UAAaA,EAAIF,QAAlB,IAA0BG,GAAID,EAAIC,IAAlC,IAC3BC,EAAMT,GAA0BF,GANjB,2CAAH,sDAUhBY,EAAAA,EAAAA,YAAU,WACRT,GAGD,GAAE,IAIH,IAAMQ,EAAQ,SAACT,GAEXN,EADO,OAATZ,EACoB6B,EAAc7B,EAAMkB,GACpBA,GAEpBR,EAAYV,EACV,EAEJ,SAAS6B,EAAcC,EAAaZ,GAElC,IAIIa,GAJsBb,GAA0BF,GAInBgB,QAAO,SAAAhC,GAAI,OAAIA,EAAKN,SAASuC,gBAAkBH,EAAYG,aAAhD,IAE5C,OADAb,QAAQC,IAAI,oBAAqBU,GAC1BA,CACR,CAIC,IAAI/B,ECxDmB,WACrB,IAAMkC,GAAWC,EAAAA,EAAAA,MAEnB,OAAyB,OAApBD,EAASE,MAGR,KAIaF,EAASE,MAAlBC,IAOT,CDuCUC,GAcT,OACE,+BAEE,iBAAKpC,UAAU,gBAAf,WACA,iBAAKA,UAAU,kBAAf,WACE,gBAAKA,UAAU,kBAAf,UACA,6CAEJ,SAACL,EAAD,CAAUO,cApBd,SAAuBmC,GACrB,IAAIC,EAAcD,EAAEE,OAAO7C,MAKvBgB,EADY,KAAhB4B,EACsBX,EAAcW,EAAaxB,GAC3BA,GAEpBN,EAAY8B,EACb,EAUyCjC,SAAUA,QAIlD,gBAAKL,UAAU,kBAAf,UAIE,gBAAKA,UAAU,YAAf,SACGS,GACCA,EAAeZ,KAAI,SAACC,GAAD,OAEjB,2BACE,SAAC,EAAA0C,cAAD,CAAeC,IAAK3C,EAAK4C,IAAKC,IAAK7C,EAAK0B,MAExC,iBAAKxB,UAAU,UAAf,WACE,yBAAIF,EAAKL,KAAT,KAAiBK,EAAK8C,QAEtB,uBAAI9C,EAAKN,YACT,uBAAIM,EAAK+C,YAPJ/C,EAAK0B,GAFG,YAwB9B,C","sources":["Components/Personal/data.js","Components/Personal/StaffBtn.jsx","Components/Personal/Trainerspage.jsx","Components/Personal/GetLink.js"],"sourcesContent":["export const buttons = [\r\n  {\r\n    kategori:\"\",\r\n    name: \"Ledning\",\r\n    value: \"Ledning\"\r\n  },\r\n  {\r\n    kategori:\"Tränare\",\r\n    name: \"Tränare\",\r\n    value: \"Tränare\"\r\n  },\r\n  {\r\n    kategori:\"Reception\",\r\n    name: \"Reception\",\r\n    value: \"Reception\"\r\n  },\r\n \r\n  {\r\n    \r\n    name: \"Instruktör\",\r\n    value: \"Instruktör\"\r\n  }\r\n];\r\n","import React from 'react'\r\nimport { buttons } from \"./data\";\r\nexport default function StaffBtn(props) {\r\n  return (\r\n    <>\r\n    {buttons &&\r\n        buttons.map((type, index) => (\r\n          <>\r\n            <button className='StaffBtn'\r\n              key={index}\r\n              value={type.value}\r\n              onClick={props.handleTrainer}\r\n              style={{\r\n                backgroundColor:\r\n                  props.selected === type.value ? \"rgba(115, 167, 193)\" : \"\",\r\n              }}\r\n            >\r\n              {type.name}\r\n            </button>\r\n          </>\r\n        ))}\r\n        </>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Personal.css\";\r\nimport StaffBtn from \"./StaffBtn\";\r\n//import Edit from \"./Edition\";\r\nimport { db } from '../../firebase-config'\r\nimport { collection, getDocs } from 'firebase/firestore'\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport { NavFilter } from \"./GetLink\";\r\nexport default function App() {\r\n\r\n\r\n\r\n  const [selected, setSelected] = useState(null);\r\n  const [trainersPerson, setTrainersPerson] = useState(null);\r\n\r\n  const staffCollectionRef = collection(db, \"staff\")\r\n  const [staff, setStaff] = useState([])\r\n\r\n  let staffLocal = []\r\n\r\n  const getStaff = async () => {\r\n    console.log('getStaff körs');\r\n    const data = await getDocs(staffCollectionRef)\r\n    setStaff(data.docs.map((doc) => ({...doc.data(), id: doc.id })));\r\n\r\n    staffLocal = data.docs.map((doc) => ({...doc.data(), id: doc.id }))\r\n    Cards(staffLocal ? staffLocal : staff)\r\n\r\n  };\r\n\r\nuseEffect(() => {\r\n  getStaff()\r\n  \r\n\r\n}, [])\r\n\r\n// do stuff\r\n\r\nconst Cards = (staffLocal) => { \r\n  type !== null\r\n  ? setTrainersPerson(filterTrainer(type, staffLocal))\r\n  : setTrainersPerson(staffLocal);\r\n\r\n  setSelected(type);\r\n   }\r\n\r\nfunction filterTrainer(persionType, staffLocal) {\r\n\r\n  let staffArrayUpperCase = staffLocal ? staffLocal : staff\r\n  let staffArray = staffArrayUpperCase\r\n\r\n\r\n  let trainersPersion = staffArray.filter(type => type.kategori.toLowerCase() === persionType.toLowerCase());\r\n  console.log('trainersPersion: ', trainersPersion);\r\n  return trainersPersion;\r\n}\r\n\r\n// done\r\n\r\n  let type = NavFilter()\r\n\r\n  function handleTrainer(e) {\r\n    let typeTrainer = e.target.value;\r\n\r\n\r\n\r\n    typeTrainer !== \"\"\r\n      ? setTrainersPerson(filterTrainer(typeTrainer, staff))\r\n      : setTrainersPerson(staff);\r\n\r\n      setSelected(typeTrainer);\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {/* Trainers nav  */}\r\n        <div className=\"personal-main\">\r\n        <div className=\"Sportix-Section\">\r\n          <div className=\"personal-header\">\r\n          <h3> Vårt team</h3>\r\n</div>\r\n      <StaffBtn handleTrainer={handleTrainer} selected={selected} />\r\n      </div>\r\n      \r\n\r\n      <div className=\"Sportix-Section\" >\r\n   \r\n\r\n\r\n        <div className=\"image_box\">\r\n          {trainersPerson &&\r\n            trainersPerson.map((type) => (\r\n\r\n              <ul key={type.id}>\r\n                <LazyLoadImage src={type.img} alt={type.id} />\r\n\r\n                <div className=\"details\">\r\n                  <p>{type.name}, {type.age}</p>\r\n\r\n                  <p>{type.kategori}</p>\r\n                  <p>{type.text}</p>\r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n              </ul>\r\n            ))}\r\n        </div>\r\n      \r\n        </div>\r\n        </div>\r\n    </>\r\n  );\r\n}","\r\n\r\nimport { useLocation } from 'react-router-dom'\r\nexport const NavFilter = () => {\r\n    const location = useLocation()\r\n   \r\n  if ( location.state  === null )\r\n  {\r\n    return (\r\n        null\r\n    )\r\n  }\r\n  else {    \r\n    const { from } = location.state \r\n    return (\r\nfrom\r\n    ) \r\n}\r\n  \r\n\r\n  }"],"names":["buttons","kategori","name","value","StaffBtn","props","map","type","index","className","onClick","handleTrainer","style","backgroundColor","selected","App","useState","setSelected","trainersPerson","setTrainersPerson","staffCollectionRef","collection","db","staff","setStaff","staffLocal","getStaff","console","log","getDocs","data","docs","doc","id","Cards","useEffect","filterTrainer","persionType","trainersPersion","filter","toLowerCase","location","useLocation","state","from","NavFilter","e","typeTrainer","target","LazyLoadImage","src","img","alt","age","text"],"sourceRoot":""}
{"version":3,"file":"static/js/521.04f23e49.chunk.js","mappings":"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","sources":["Components/loading_screen/CloseLoadingModal.js","Components/loading_screen/OpenLoadingModal.js","booking_page/BookingPage.jsx","booking_page/Update_modal_pass.jsx"],"sourcesContent":["\r\n\r\nexport default function closeLoadingModal(){\r\n\r\n    const none = () => document.querySelector('#loading-screen').style.display=\"none\"\r\n    \r\n    document.querySelector('#loading-screen').style.opacity=\"0\"\r\n    setTimeout(none, 300)\r\n    \r\n}","\r\n\r\nexport default function openLoadingModal(){\r\n\r\n    // document.querySelector('#loading-screen').style.display=\"flex\"\r\n    // const opa = () => document.querySelector('#loading-screen').style.opacity=\"1\"\r\n\r\n    // setTimeout(opa, 10)\r\n\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"./bookingPage.css\";\r\nimport \"../admin_page/AdminPage.css\";\r\nimport { db } from \"../firebase-config\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  addDoc,\r\n  updateDoc,\r\n  doc,\r\n  deleteDoc,\r\n  refEqual,\r\n} from \"firebase/firestore\";\r\nimport CheckModal from \"./CheckModal\";\r\n// import { BsFillPencilFill } from \"react-icons/bs\";\r\nimport Update_modal_pass from \"./Update_modal_pass\";\r\nimport openLoadingModal from \"../Components/loading_screen/OpenLoadingModal\";\r\nimport closeLoadingModal from \"../Components/loading_screen/CloseLoadingModal\";\r\n\r\nfunction BookingPage() {\r\n  const ref = useRef(null);\r\n  // HÄMTAR STAFF\r\n  const passCollectionRef = collection(db, \"pass\");\r\n  const [pass, setPass] = useState([]);\r\n\r\n  const getStaff = async () => {\r\n    openLoadingModal()\r\n    console.log('getPass körs');\r\n    const data = await getDocs(passCollectionRef);\r\n    setPass(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n    sortPass()\r\n    closeLoadingModal()\r\n  };\r\n\r\n  const getStaffFirstTime = async () => {\r\n    const data = await getDocs(passCollectionRef);\r\n    setPass(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n    sortPass()\r\n  };\r\n\r\n  useEffect(() => {\r\n    getStaffFirstTime()\r\n  }, []);\r\n\r\n  // HÄMTAR PROFILER\r\n  const profilerCollectionRef = collection(db, \"profiler\");\r\n  const [profiler, setProfiler] = useState([]);\r\n \r\n  useEffect(() => {\r\n    const getProfiler = async () => {\r\n      const data = await getDocs(profilerCollectionRef);\r\n      setProfiler(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n    };\r\n \r\n    getProfiler();\r\n  }, []);\r\n\r\n   const [inloggadUser, setInloggadUser] = useState(JSON.parse(localStorage.getItem('user')))\r\n\r\n  // BOKA-KNAPPEN\r\n\r\n  const [bokadText, setBokadText] = useState(\"\");\r\n\r\n  const handleBokaBtn = async (passId, DBcollextion, platser, bokad) => {\r\n    addPassToProfile(passId);\r\n\r\n    if (bokad === true) {\r\n      platser--;\r\n      bokad = false;\r\n    } else {\r\n      platser++;\r\n      bokad = true;\r\n    }\r\n\r\n    // UPPDATERAR DATA\r\n    const staffDoc = doc(db, DBcollextion, passId);\r\n    const newFields = { platser: platser, bokad: bokad };\r\n    await updateDoc(staffDoc, newFields);\r\n    // ---\r\n\r\n    document.querySelector(\"#check-modal\").style.display = \"flex\";\r\n\r\n    setBokadText(bokad ? \"bokat\" : \"avbokat\");\r\n  };\r\n\r\n  const addPassToProfile = async (passId) => {\r\n\r\n    const inloggadId = inloggadUser.id\r\n    \r\n    const tidigarePass = inloggadUser.bokadePass\r\n\r\n    const newPassLista = [];\r\n\r\n    if (tidigarePass) {\r\n      tidigarePass.map((item, index) => {\r\n        newPassLista.push(passId);\r\n        newPassLista.push(item);\r\n      });\r\n    } else {\r\n      newPassLista.push(passId);\r\n    }\r\n\r\n    // UPPDATERAR DATA\r\n    const staffDoc = doc(db, \"profiler\", inloggadId);\r\n    const newFields = { bokadePass: newPassLista };\r\n    await updateDoc(staffDoc, newFields);\r\n  };\r\n\r\n  //--\r\n\r\n  const openUpdateModal = (id) => {\r\n    document.querySelector(`#update-modal-${id}`).style.display = \"flex\";\r\n  };\r\n\r\n  // KALENDER\r\n\r\n  const [date, setDate] = useState(new Date());\r\n  const [passDenDagen, setPassDenDagen] = useState([]);\r\n\r\n  const sortPass = (e) => {\r\n    const filteredPass = pass.filter((pass) => {\r\n      return pass.dag == e;\r\n    });\r\n\r\n    setPassDenDagen(filteredPass);\r\n\r\n    const scrollToPass = () => {\r\n      ref.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    };\r\n    scrollToPass();\r\n  };\r\n\r\n  // SORTERA PASSEN\r\n\r\n  const [passKategorier, setPassKategorier] = useState();\r\n\r\n  const sortKategories = (selectedKategori) => {\r\n    setPassKategorier(selectedKategori);\r\n\r\n    const filteredPass = pass.filter((pass) => {\r\n      return pass.kategori == selectedKategori;\r\n    });\r\n\r\n    // const [maxAntal_STYLE, setmaxAntal_STYLE] = useState({});\r\n\r\n    return (\r\n      <>\r\n        <article className=\"booking-page-container\">\r\n          <div className=\"booking-page-header-desktop\">\r\n            <h1>Boka Pass</h1>\r\n          </div>\r\n          <div className=\"booking-content\">\r\n            <section className='blue-wrapper center'>\r\n        \r\n              <div className=\"booking-page-header-mobile\">\r\n                <h1>Kalender</h1></div>\r\n              <Calendar onChange={setDate} value={date} onClickDay={sortPass} />\r\n            </section>\r\n\r\n            <section className='blue-wrapper center'>\r\n              <div className=\"booking-page-header-mobile\"> <h1>Pass</h1> </div>\r\n              <select className='drop-down' name='välj pass' onChange={(e) => sortKategories(e.target.value)}>\r\n                <option value=\"null\">Välj pass</option>\r\n                <option value=\"kondition\">Kondition</option>\r\n                <option value=\"spinning\">Styrka</option>\r\n                <option value=\"styrka\">Crossfit</option>\r\n                <option value=\"flexebilitet\">Funktionell Träning</option>\r\n                <option value=\"mindfullnes\">Mindfullnes</option>\r\n                <option value=\"crossfit\">Crossfit</option>\r\n                <option value=\"funktionell-träning\">Funktionell träning</option>\r\n\r\n              </select>\r\n            \r\n              {passDenDagen.map((pass, index) => {\r\n\r\n                return (\r\n                  <>\r\n                    <div key={index} className=\"pass-card center\" ref={ref}>\r\n                      <h2\r\n                        className=\"booking-antal\"\r\n                        style={\r\n                          pass.platser == pass.maxAntal\r\n                            ? { color: \"red\" }\r\n                            : { color: \"white\" }\r\n                        }\r\n                      >\r\n                        {!pass.platser ? 0 : pass.platser}/{pass.maxAntal}\r\n                      </h2>\r\n                      {/* <img clasName='booking-icon' src={require(\"./\"+pass.kategori +\".png\")} alt=\"no img\" height=\"40px\" width=\"30px\"/> */}\r\n                      <div className=\"aktv-tid-div\">\r\n                        <h1>{pass.aktivitet}</h1>\r\n                        <p>\r\n                          {pass.dayString}, {pass.dateString} {pass.monthString}{\" \"}\r\n                          <br />\r\n                          {pass.tid}\r\n                        </p>\r\n                      </div>\r\n                      <h2>instruktör: {pass.instruktör}</h2>\r\n                      <button\r\n                        class=\"myButton booking-btn\"\r\n                        onClick={() =>\r\n                          handleBokaBtn(pass.id, \"pass\", pass.platser)\r\n                        }\r\n                      >\r\n                        {\" \"}\r\n                        {pass.bokad ? \"Avboka\" : \"Boka\"}\r\n                      </button>\r\n                    </div>\r\n                  </>\r\n                );\r\n              })}\r\n\r\n              <CheckModal bokadText={bokadText} />\r\n            </section>\r\n          </div>\r\n        </article>\r\n      </>\r\n    );\r\n  }\r\n}\r\n  \r\n\r\nexport default BookingPage;\r\n","import React, { useState } from 'react'\r\nimport '../admin_page/AdminPage.css'\r\nimport { GrFormClose } from \"@react-icons/all-files/gr/GrFormClose\";\r\nimport { db } from '../firebase-config'\r\nimport { collection, getDocs, addDoc, updateDoc, doc, deleteDoc } from 'firebase/firestore'\r\nimport { useEffect } from 'react'\r\nimport Calendar from 'react-calendar';\r\nimport openLoadingModal from '../Components/loading_screen/OpenLoadingModal'\r\nimport closeLoadingModal from '../Components/loading_screen/CloseLoadingModal'\r\n\r\nfunction Update_modal_pass({ id, aktivitet, instruktör, maxAntal, platser, tid, dag, getPass, prevDayString, prevMonthSpring, prevDateString, kategori }) {\r\n\r\n    const [newAktivitet, setNewAktivitet] = useState(aktivitet)\r\n    const [newpassKategori, setNewPassKategori] = useState(kategori)\r\n    const [newInstruktör, setNewInstruktör] = useState(instruktör)\r\n    const [newMaxAntal, setNewMaxAntal] = useState(maxAntal)\r\n    const [newTid, setNewTid] = useState(tid)\r\n    const [newDate, setNewDate] = useState(dag)\r\n    const [date, setDate] = useState('')\r\n\r\n    const [dayString, setDayString] = useState(prevDayString)\r\n    const [monthString, setMonthString] = useState(prevMonthSpring)\r\n    const [dateString, setDateString] = useState(prevDateString)\r\n\r\n// UPPDATERAR DATA\r\n  const updatePass = async (DBcollextion) => {\r\n    openLoadingModal()\r\n    fixDays()\r\n    const staffDoc = doc(db, DBcollextion, id)\r\n    console.log('newAktivitet: ', newAktivitet, 'newInstruktör: ', newInstruktör, 'newMaxAntal: ', newMaxAntal\r\n    , 'newTid: ' ,newTid, 'newDate: ', newDate, 'dayString: ', dayString, 'dateString: ', dateString, 'monthString: ', monthString\r\n    );\r\n    const newFields = {\r\n        aktivitet: newAktivitet, \r\n        instruktör: newInstruktör, \r\n        maxAntal: newMaxAntal,\r\n        tid: newTid,\r\n        dag: String(newDate),\r\n        dateString: dayString,\r\n        dayString: dateString,\r\n        monthString: monthString,\r\n        kategori: newpassKategori\r\n        }\r\n    await updateDoc(staffDoc, newFields)\r\n    getPass()\r\n    closeLoadingModal()\r\n    alert('Pass uppdaterat!')\r\n    closeModal()\r\n  }\r\n\r\n// RADERAR DATA\r\n  const deleteStaff = async (id, DBcollextion) => {\r\n    if (window.confirm('Radera pass?')){\r\n        openLoadingModal()\r\n        const staffDoc = doc(db, DBcollextion, id);\r\n        await deleteDoc(staffDoc);\r\n        getPass()\r\n        closeModal()\r\n        closeLoadingModal()\r\n        \r\n    }\r\n  }\r\n\r\n//\r\n\r\n    const closeModal = () => {\r\n        document.querySelector(`#update-modal-${id}`).style.display=\"none\"\r\n    }\r\n\r\n\r\n    const fixDays = (e) => {\r\n        const date1 = new Date(e)\r\n        const timestamp = date1.getTime()\r\n        const dateTimestamp = new Date(timestamp)\r\n        setDateString(dateTimestamp.getDate())\r\n        setDate(e)\r\n\r\n        let day = \"\"\r\n\r\n        switch (dateTimestamp.getDay()) {\r\n            case 0:\r\n                day = \"Söndag\"\r\n                break;\r\n            case 1:\r\n                day = \"Måndag\"\r\n                break;\r\n            case 2:\r\n                day = \"Tisdag\"\r\n                break;\r\n            case 3:\r\n                day = \"Onsdag\"\r\n                break;\r\n            case 4:\r\n                day = \"Torsdag\"\r\n                break;\r\n            case 5:\r\n                day = \"Fredag\"\r\n                break;\r\n            case 6:\r\n                day = \"Lördag\"\r\n                break;\r\n        }\r\n\r\n        setDayString(day)\r\n\r\n        let month = \"\"\r\n\r\n        switch (dateTimestamp.getMonth()) {\r\n            case 0:\r\n                month = \"Januari\"\r\n                break;\r\n            case 1:\r\n                month = \"Februari\"\r\n                break;\r\n            case 2:\r\n                month = \"Mars\"\r\n                break;\r\n            case 3:\r\n                month = \"April\"\r\n                break;\r\n            case 4:\r\n                month = \"Maj\"\r\n                break;\r\n            case 5:\r\n                month = \"Juni\"\r\n                break;\r\n            case 6:\r\n                month = \"Juli\"\r\n                break;\r\n            case 7:\r\n                month = \"Agusti\"\r\n                break;\r\n            case 8:\r\n                month = \"September\"\r\n                break;\r\n            case 9:\r\n                month = \"Oktober\"\r\n                break;\r\n            case 10:\r\n                month = \"November\"\r\n                break;\r\n            case 11:\r\n                month = \"December\"\r\n                break;\r\n    }\r\n\r\n    setMonthString(month)\r\n   }\r\n\r\n  return (\r\n    <section id={`update-modal-${id}`} className='update-modal-wrapper'>\r\n        <article className='update-modal'>\r\n            <GrFormClose className='close-icon' onClick={closeModal} />\r\n\r\n            <div className='modal-input-wrapper'>\r\n                <h1>Ändra namn på aktivitet:</h1>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder={aktivitet}\r\n                    onChange={(e) => {setNewAktivitet(e.target.value)}}\r\n                    defaultValue={aktivitet} \r\n                />\r\n            </div>\r\n\r\n            <div className='modal-input-wrapper'>\r\n              <h1>Ändra kategori:</h1>\r\n              <select className='drop-down input-select' name='välj pass' onChange={(e) => setNewPassKategori(e.target.value)}>\r\n                <option value=\"\">Välj kategori</option>\r\n                <option value=\"kondition\">Kondition</option>\r\n                <option value=\"spinning\">Spinning</option>\r\n                <option value=\"styrka\">Styrka</option>\r\n                <option value=\"flexebilitet\">Flexebilitet</option>\r\n                <option value=\"mindfullnes\">Mindfullnes</option>\r\n                <option value=\"crossfit\">Crossfit</option>\r\n                <option value=\"funktionell-träning\">Funktionell träning</option>\r\n            </select>\r\n            </div>\r\n\r\n            <div className='modal-input-wrapper'>\r\n                <h1>Ändra instruktör: </h1>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder={instruktör}\r\n                    onChange={(e) => {setNewInstruktör(e.target.value)}}\r\n                    defaultValue={instruktör}\r\n                />\r\n            </div>\r\n\r\n            <div className='center'>\r\n            <p>Dag: </p>\r\n            <Calendar value={date} onClickDay={fixDays}/>\r\n            </div>\r\n\r\n            <div className='modal-input-wrapper'>\r\n                <h1>Ändra tid: </h1>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder={tid}\r\n                    onChange={(e) => {setNewTid(e.target.value)}}\r\n                    defaultValue={tid}\r\n                />\r\n            </div>\r\n\r\n            <div className='modal-input-wrapper'>\r\n                <h1>Ändra maxAntal: </h1>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder={maxAntal}\r\n                    onChange={(e) => {setNewMaxAntal(e.target.value)}}\r\n                    defaultValue={maxAntal}\r\n                />\r\n            </div>\r\n            \r\n            <div className=\"m30\">\r\n                <button onClick={() => {updatePass('pass')}}>Spara</button>\r\n                <button onClick={() => {deleteStaff(id, 'pass')}}>Ta bort pass</button>\r\n            </div>\r\n\r\n        </article>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Update_modal_pass"],"names":["closeLoadingModal","document","querySelector","style","opacity","setTimeout","display","openLoadingModal","ref","useRef","passCollectionRef","collection","db","useState","pass","setPass","getStaffFirstTime","getDocs","data","docs","map","doc","id","sortPass","useEffect","profilerCollectionRef","setProfiler","getProfiler","JSON","parse","localStorage","getItem","Date","setPassDenDagen","e","filteredPass","filter","dag","current","scrollIntoView","behavior","scrollToPass","aktivitet","instruktör","maxAntal","tid","platser","getPass","prevDayString","prevMonthSpring","prevDateString","kategori","newAktivitet","setNewAktivitet","newpassKategori","setNewPassKategori","newInstruktör","setNewInstruktör","newMaxAntal","setNewMaxAntal","newTid","setNewTid","newDate","date","setDate","dayString","setDayString","monthString","setMonthString","dateString","setDateString","updatePass","DBcollextion","fixDays","staffDoc","console","log","newFields","String","updateDoc","alert","closeModal","deleteStaff","window","confirm","deleteDoc","timestamp","getTime","dateTimestamp","getDate","day","getDay","month","getMonth","className","onClick","type","placeholder","onChange","target","value","defaultValue","name","onClickDay"],"sourceRoot":""}
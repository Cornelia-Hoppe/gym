{"version":3,"file":"static/js/521.697d4204.chunk.js","mappings":"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","sources":["Components/loading_screen/CloseLoadingModal.js","Components/loading_screen/OpenLoadingModal.js","booking_page/CheckModal.jsx","booking_page/BookingPage.jsx","booking_page/Update_modal_pass.jsx","functions/UpdateLocalStorage.js"],"sourcesContent":["\r\n\r\nexport default function closeLoadingModal(){\r\n\r\n    const none = () => document.querySelector('#loading-screen').style.display=\"none\"\r\n    \r\n    document.querySelector('#loading-screen').style.opacity=\"0\"\r\n    setTimeout(none, 300)\r\n    \r\n}","\r\n\r\nexport default function openLoadingModal(){\r\n\r\n    // document.querySelector('#loading-screen').style.display=\"flex\"\r\n    // const opa = () => document.querySelector('#loading-screen').style.opacity=\"1\"\r\n\r\n    // setTimeout(opa, 10)\r\n\r\n}","import React from 'react'\r\nimport '../booking_page/bookingPage.css'\r\nimport { FaCheck } from \"@react-icons/all-files/fa/FaCheck\";\r\n\r\n\r\nfunction CheckModal({ bokadText }) {\r\n\r\n    const closeModal = () => {\r\n        document.querySelector('#check-modal').style.display=\"none\"\r\n    }\r\n\r\n  return (\r\n    \r\n    <div id='check-modal'>\r\n        <div className='booking-modal'>\r\n            <FaCheck className='check-icon' />\r\n            <h1>Pass {bokadText}!</h1>\r\n            <p>Se dina bokade pass under <a href=\"#\">Min sidor</a></p>\r\n            <button onClick={closeModal}>OK</button>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckModal","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"./bookingPage.css\";\r\nimport \"../admin_page/AdminPage.css\";\r\nimport { db } from \"../firebase-config\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  updateDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport CheckModal from \"./CheckModal\";\r\n// import { BsFillPencilFill } from \"react-icons/bs\";\r\nimport Update_modal_pass from \"./Update_modal_pass\";\r\nimport openLoadingModal from \"../Components/loading_screen/OpenLoadingModal\";\r\nimport closeLoadingModal from \"../Components/loading_screen/CloseLoadingModal\";\r\nimport UpdateLocalStorage from \"../functions/UpdateLocalStorage\";\r\nimport { async } from \"@firebase/util\";\r\n\r\nfunction BookingPage() {\r\n\r\n  const [passKategorier, setPassKategorier] = useState();\r\n  const [maxAntal_STYLE, setmaxAntal_STYLE] = useState({});\r\n\r\n  const [date, setDate] = useState(new Date())\r\n  const [passDenDagen, setPassDenDagen] = useState([])\r\n\r\n  // SÄTTER inloggaUser. DENNA KOMMER UPPDATERAS\r\n  const [inloggadUser, setInloggadUser] = useState(JSON.parse(localStorage.getItem('user')))\r\n\r\n  const ref = useRef(null);\r\n\r\n\r\n// START: HÄMTAR PASS\r\n\r\n  const passCollectionRef = collection(db, \"pass\");\r\n  const [pass, setPass] = useState([]);\r\n\r\n  const getPass = async () => {\r\n    openLoadingModal()\r\n    console.log('getPass körs');\r\n    const data = await getDocs(passCollectionRef);\r\n    setPass(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n\r\n    closeLoadingModal()\r\n  };\r\n\r\n    // HÄMTAR PASS FÖRSTA GÅNGEN\r\n  const getStaffFirstTime = async () => {\r\n    const data = await getDocs(passCollectionRef);\r\n    setPass(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getStaffFirstTime()\r\n  }, []);\r\n\r\n// END: HÄMTAR PASS\r\n\r\n\r\n// START: HÄMTAR PROFILER\r\n\r\n  const profilerCollectionRef = collection(db, \"profiler\");\r\n  const [profiler, setProfiler] = useState([]);\r\n \r\n  useEffect(() => {\r\n    const getProfiler = async () => {\r\n      const data = await getDocs(profilerCollectionRef);\r\n      setProfiler(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n    };\r\n \r\n    getProfiler();\r\n  }, []);\r\n\r\n// END: HÄMTAR PROFILER\r\n\r\n  // BOKA-KNAPPEN\r\n\r\n  const handleBokaBtn = async (passId, platser, ) => {\r\n\r\n    if (!inloggadUser) alert('go to login / sign up')\r\n    else {\r\n      inloggadUser.bokadePass.find((item) => {\r\n      if (passId == item) avbokaPass() })\r\n              \r\n        openLoadingModal()\r\n\r\n        addPassToProfile(passId)\r\n        \r\n      };\r\n\r\n\r\n// START: UPPDATERAR PASS DATA OCH LOCALSTORAGE\r\n\r\n      const addPassToProfile = async (passId) => {\r\n      \r\n      const inloggadId = inloggadUser.id\r\n      \r\n      const tidigarePass = inloggadUser.bokadePass\r\n\r\n      const newPassLista = []\r\n\r\n      if (tidigarePass) {\r\n        tidigarePass.map((item, index) => {\r\n          newPassLista.push(passId)\r\n          newPassLista.push(item)\r\n        })\r\n      } else {\r\n        newPassLista.push(passId)\r\n      }\r\n\r\n      const passDoc = doc(db, 'profiler', inloggadId);\r\n      const newFields = { bokadePass: newPassLista };\r\n      await updateDoc(passDoc, newFields);\r\n\r\n      UpdateLocalStorage(inloggadUser.id)\r\n\r\n      getPass()\r\n\r\n      closeLoadingModal()\r\n\r\n      document.querySelector(\"#check-modal\").style.display = \"flex\";\r\n      }\r\n\r\n   \r\n\r\n  };\r\n\r\n// END: UPPDATERAR PASS DATA OCH LOCALSTORAGE\r\n\r\n\r\n// START: SORTERA PASSEN\r\n\r\n  // PER DAG\r\n  const sortPassDay = (e) => {\r\n    const filteredPass = pass.filter((pass) => {\r\n      return pass.dag == e;\r\n    });\r\n    setPassDenDagen(filteredPass);\r\n    scrollToPass();\r\n  };\r\n\r\n  // PER KATEGORI\r\n  const sortKategories = (selectedKategori) => {\r\n    const filteredKategoryPass = pass.filter((pass) => {\r\n      return pass.kategori == selectedKategori;\r\n    });\r\n    setPassDenDagen(filteredKategoryPass);\r\n    scrollToPass();\r\n    setPassKategorier(selectedKategori);\r\n    \r\n  }\r\n  \r\n// END: SORTERA PASSEN\r\n\r\n\r\n// START: AVBOKA PASS \r\n\r\nconst avbokaPass = async (passId, passPlatser) => {\r\n\r\n  let newBokadePass = []\r\n\r\n  inloggadUser.bokadePass.find((item) => {\r\n    if (passId == item) {\r\n    } else {\r\n      newBokadePass.push(item)\r\n    }\r\n  })\r\n\r\n    // UPPDATERAR DATA PROFILER\r\n      const profulerDoc = doc(db, 'profiler', inloggadUser.id);\r\n      const newFields = { bokadePass: newBokadePass,};\r\n      await updateDoc(profulerDoc, newFields);\r\n\r\n      UpdateLocalStorage(inloggadUser.id)\r\n\r\n      passPlatser--\r\n\r\n      // UPPDATERAR DATA PASS\r\n      const passfDoc = doc(db, \"pass\", passId);\r\n      const newFields2 = { platser: passPlatser,};\r\n      await updateDoc(passfDoc, newFields2);\r\n\r\ngetPass()\r\n\r\n}\r\n\r\n// END: AVBOKA PASS  \r\n\r\n// SCROLL FUNCTION\r\nconst scrollToPass = () => {\r\n  ref.current?.scrollIntoView({ behavior: \"smooth\" });\r\n};\r\n\r\n\r\n    return (\r\n      <>\r\n        <article className=\"booking-page-container\">\r\n          <div className=\"booking-page-header-desktop\">\r\n            <h1>Boka Pass</h1>\r\n          </div>\r\n          <div className=\"booking-content\">\r\n            <section className='blue-wrapper center'>\r\n        \r\n              <div className=\"booking-page-header-mobile\">\r\n                <h1>Kalender</h1></div>\r\n              <Calendar onChange={setDate} value={date} onClickDay={sortPassDay} />\r\n            </section>\r\n\r\n            <section className='blue-wrapper center'>\r\n              <div className=\"booking-page-header-mobile\"> <h1>Pass</h1> </div>\r\n              <select className='drop-down' name='välj pass' onChange={(e) => sortKategories(e.target.value)}>\r\n                <option value=\"null\">Välj pass</option>\r\n                <option value=\"kondition\">Kondition</option>\r\n                <option value=\"spinning\">Styrka</option>\r\n                <option value=\"styrka\">Crossfit</option>\r\n                <option value=\"flexebilitet\">Funktionell Träning</option>\r\n                <option value=\"mindfullnes\">Mindfullnes</option>\r\n                <option value=\"crossfit\">Crossfit</option>\r\n                <option value=\"funktionell-träning\">Funktionell träning</option>\r\n\r\n              </select>\r\n            \r\n              {passDenDagen.map((pass, index) => {\r\n\r\n                return (\r\n                  <>\r\n                    <div key={index} className=\"pass-card center\" ref={ref}>\r\n                      <h2\r\n                        className=\"booking-antal\"\r\n                        style={\r\n                          pass.platser == pass.maxAntal\r\n                            ? { color: \"red\" }\r\n                            : { color: \"white\" }\r\n                        }\r\n                      >\r\n                        {!pass.platser ? 0 : pass.platser}/{pass.maxAntal}\r\n                      </h2>\r\n                      {/* <img clasName='booking-icon' src={require(\"./\"+pass.kategori +\".png\")} alt=\"no img\" height=\"40px\" width=\"30px\"/> */}\r\n                      <div className=\"aktv-tid-div\">\r\n                        <h1>{pass.aktivitet}</h1>\r\n                        <p>\r\n                          {pass.dayString}, {pass.dateString} {pass.monthString}{\" \"}\r\n                          <br />\r\n                          {pass.tid}\r\n                        </p>\r\n                      </div>\r\n                      <h2>instruktör: {pass.instruktör}</h2>\r\n                      <button\r\n                        class=\"myButton booking-btn\"\r\n                        onClick={() =>\r\n                          handleBokaBtn(pass.id, \"pass\", pass.platser)}>\r\n                        Boka\r\n                      </button>\r\n                    </div>\r\n                  </>\r\n                );\r\n              })}\r\n\r\n              <CheckModal bokadText={'Bokat'} />\r\n            </section>\r\n          </div>\r\n        </article>\r\n      </>\r\n    );\r\n  }\r\n\r\n  \r\n\r\nexport default BookingPage;\r\n","import React, { useState } from 'react'\r\nimport '../admin_page/AdminPage.css'\r\nimport { GrFormClose } from \"@react-icons/all-files/gr/GrFormClose\";\r\nimport { db } from '../firebase-config'\r\nimport { collection, getDocs, addDoc, updateDoc, doc, deleteDoc } from 'firebase/firestore'\r\nimport { useEffect } from 'react'\r\nimport Calendar from 'react-calendar';\r\nimport openLoadingModal from '../Components/loading_screen/OpenLoadingModal'\r\nimport closeLoadingModal from '../Components/loading_screen/CloseLoadingModal'\r\n\r\nfunction Update_modal_pass({ id, aktivitet, instruktör, maxAntal, platser, tid, dag, getPass, prevDayString, prevMonthSpring, prevDateString, kategori }) {\r\n\r\n    const [newAktivitet, setNewAktivitet] = useState(aktivitet)\r\n    const [newpassKategori, setNewPassKategori] = useState(kategori)\r\n    const [newInstruktör, setNewInstruktör] = useState(instruktör)\r\n    const [newMaxAntal, setNewMaxAntal] = useState(maxAntal)\r\n    const [newTid, setNewTid] = useState(tid)\r\n    const [newDate, setNewDate] = useState(dag)\r\n    const [date, setDate] = useState('')\r\n\r\n    const [dayString, setDayString] = useState(prevDayString)\r\n    const [monthString, setMonthString] = useState(prevMonthSpring)\r\n    const [dateString, setDateString] = useState(prevDateString)\r\n\r\n// UPPDATERAR DATA\r\n  const updatePass = async (DBcollextion) => {\r\n    openLoadingModal()\r\n    fixDays()\r\n    const staffDoc = doc(db, DBcollextion, id)\r\n    console.log('newAktivitet: ', newAktivitet, 'newInstruktör: ', newInstruktör, 'newMaxAntal: ', newMaxAntal\r\n    , 'newTid: ' ,newTid, 'newDate: ', newDate, 'dayString: ', dayString, 'dateString: ', dateString, 'monthString: ', monthString\r\n    );\r\n    const newFields = {\r\n        aktivitet: newAktivitet, \r\n        instruktör: newInstruktör, \r\n        maxAntal: newMaxAntal,\r\n        tid: newTid,\r\n        dag: String(newDate),\r\n        dateString: dayString,\r\n        dayString: dateString,\r\n        monthString: monthString,\r\n        kategori: newpassKategori\r\n        }\r\n    await updateDoc(staffDoc, newFields)\r\n    getPass()\r\n    closeLoadingModal()\r\n    alert('Pass uppdaterat!')\r\n    closeModal()\r\n  }\r\n\r\n// RADERAR DATA\r\n  const deleteStaff = async (id, DBcollextion) => {\r\n    if (window.confirm('Radera pass?')){\r\n        openLoadingModal()\r\n        const staffDoc = doc(db, DBcollextion, id);\r\n        await deleteDoc(staffDoc);\r\n        getPass()\r\n        closeModal()\r\n        closeLoadingModal()\r\n        \r\n    }\r\n  }\r\n\r\n//\r\n\r\n    const closeModal = () => {\r\n        document.querySelector(`#update-modal-${id}`).style.display=\"none\"\r\n    }\r\n\r\n\r\n    const fixDays = (e) => {\r\n        const date1 = new Date(e)\r\n        const timestamp = date1.getTime()\r\n        const dateTimestamp = new Date(timestamp)\r\n        setDateString(dateTimestamp.getDate())\r\n        setDate(e)\r\n\r\n        let day = \"\"\r\n\r\n        switch (dateTimestamp.getDay()) {\r\n            case 0:\r\n                day = \"Söndag\"\r\n                break;\r\n            case 1:\r\n                day = \"Måndag\"\r\n                break;\r\n            case 2:\r\n                day = \"Tisdag\"\r\n                break;\r\n            case 3:\r\n                day = \"Onsdag\"\r\n                break;\r\n            case 4:\r\n                day = \"Torsdag\"\r\n                break;\r\n            case 5:\r\n                day = \"Fredag\"\r\n                break;\r\n            case 6:\r\n                day = \"Lördag\"\r\n                break;\r\n        }\r\n\r\n        setDayString(day)\r\n\r\n        let month = \"\"\r\n\r\n        switch (dateTimestamp.getMonth()) {\r\n            case 0:\r\n                month = \"Januari\"\r\n                break;\r\n            case 1:\r\n                month = \"Februari\"\r\n                break;\r\n            case 2:\r\n                month = \"Mars\"\r\n                break;\r\n            case 3:\r\n                month = \"April\"\r\n                break;\r\n            case 4:\r\n                month = \"Maj\"\r\n                break;\r\n            case 5:\r\n                month = \"Juni\"\r\n                break;\r\n            case 6:\r\n                month = \"Juli\"\r\n                break;\r\n            case 7:\r\n                month = \"Agusti\"\r\n                break;\r\n            case 8:\r\n                month = \"September\"\r\n                break;\r\n            case 9:\r\n                month = \"Oktober\"\r\n                break;\r\n            case 10:\r\n                month = \"November\"\r\n                break;\r\n            case 11:\r\n                month = \"December\"\r\n                break;\r\n    }\r\n\r\n    setMonthString(month)\r\n   }\r\n\r\n  return (\r\n    <section id={`update-modal-${id}`} className='update-modal-wrapper'>\r\n        <article className='update-modal'>\r\n            <GrFormClose className='close-icon' onClick={closeModal} />\r\n\r\n            <div className='modal-input-wrapper'>\r\n                <h1>Ändra namn på aktivitet:</h1>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder={aktivitet}\r\n                    onChange={(e) => {setNewAktivitet(e.target.value)}}\r\n                    defaultValue={aktivitet} \r\n                />\r\n            </div>\r\n\r\n            <div className='modal-input-wrapper'>\r\n              <h1>Ändra kategori:</h1>\r\n              <select className='drop-down input-select' name='välj pass' onChange={(e) => setNewPassKategori(e.target.value)}>\r\n                <option value=\"\">Välj kategori</option>\r\n                <option value=\"kondition\">Kondition</option>\r\n                <option value=\"spinning\">Spinning</option>\r\n                <option value=\"styrka\">Styrka</option>\r\n                <option value=\"flexebilitet\">Flexebilitet</option>\r\n                <option value=\"mindfullnes\">Mindfullnes</option>\r\n                <option value=\"crossfit\">Crossfit</option>\r\n                <option value=\"funktionell-träning\">Funktionell träning</option>\r\n            </select>\r\n            </div>\r\n\r\n            <div className='modal-input-wrapper'>\r\n                <h1>Ändra instruktör: </h1>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder={instruktör}\r\n                    onChange={(e) => {setNewInstruktör(e.target.value)}}\r\n                    defaultValue={instruktör}\r\n                />\r\n            </div>\r\n\r\n            <div className='center'>\r\n            <p>Dag: </p>\r\n            <Calendar value={date} onClickDay={fixDays}/>\r\n            </div>\r\n\r\n            <div className='modal-input-wrapper'>\r\n                <h1>Ändra tid: </h1>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder={tid}\r\n                    onChange={(e) => {setNewTid(e.target.value)}}\r\n                    defaultValue={tid}\r\n                />\r\n            </div>\r\n\r\n            <div className='modal-input-wrapper'>\r\n                <h1>Ändra maxAntal: </h1>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder={maxAntal}\r\n                    onChange={(e) => {setNewMaxAntal(e.target.value)}}\r\n                    defaultValue={maxAntal}\r\n                />\r\n            </div>\r\n            \r\n            <div className=\"m30\">\r\n                <button onClick={() => {updatePass('pass')}}>Spara</button>\r\n                <button onClick={() => {deleteStaff(id, 'pass')}}>Ta bort pass</button>\r\n            </div>\r\n\r\n        </article>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Update_modal_pass","import { db } from '../firebase-config'\r\nimport { collection, getDocs} from 'firebase/firestore'\r\n\r\nexport default function UpdateLocalStorage(id) {\r\n\r\n    const resetLocalStorage = () => {\r\n        localStorage.removeItem('user')\r\n    }\r\n\r\n    const getToLocalStorage = async () => {\r\n        let profiler = []\r\n        const profilerCollectionRef = collection(db, 'profiler')\r\n\r\n        const data = await getDocs(profilerCollectionRef)\r\n        profiler = (data.docs.map((doc) => ({...doc.data(), id: doc.id })));\r\n\r\n        const updatedProfile = profiler.find((profil) => {\r\n            console.log('profil.id: ', profil.id);\r\n\r\n            return profil.id == id\r\n        })\r\n\r\n        localStorage.setItem('user', JSON.stringify(updatedProfile))\r\n    }\r\n\r\n    resetLocalStorage()\r\n    getToLocalStorage()\r\n}"],"names":["closeLoadingModal","document","querySelector","style","opacity","setTimeout","display","openLoadingModal","bokadText","id","className","FaCheck","href","onClick","useState","setPassKategorier","Date","date","setDate","passDenDagen","setPassDenDagen","JSON","parse","localStorage","getItem","inloggadUser","ref","useRef","passCollectionRef","collection","db","pass","setPass","getPass","console","log","getDocs","data","docs","map","doc","getStaffFirstTime","useEffect","profilerCollectionRef","setProfiler","getProfiler","handleBokaBtn","passId","platser","bokadePass","find","item","avbokaPass","addPassToProfile","alert","inloggadId","tidigarePass","newPassLista","index","push","passDoc","newFields","updateDoc","UpdateLocalStorage","passPlatser","newBokadePass","profulerDoc","passfDoc","newFields2","scrollToPass","current","scrollIntoView","behavior","onChange","value","onClickDay","e","filteredPass","filter","dag","name","selectedKategori","filteredKategoryPass","kategori","sortKategories","target","maxAntal","color","aktivitet","dayString","dateString","monthString","tid","instruktör","class","prevDayString","prevMonthSpring","prevDateString","newAktivitet","setNewAktivitet","newpassKategori","setNewPassKategori","newInstruktör","setNewInstruktör","newMaxAntal","setNewMaxAntal","newTid","setNewTid","newDate","setDayString","setMonthString","setDateString","updatePass","DBcollextion","fixDays","staffDoc","String","closeModal","deleteStaff","window","confirm","deleteDoc","timestamp","getTime","dateTimestamp","getDate","day","getDay","month","getMonth","type","placeholder","defaultValue","getToLocalStorage","profiler","updatedProfile","profil","setItem","stringify","removeItem"],"sourceRoot":""}
{"version":3,"file":"static/js/861.cf8cd5c5.chunk.js","mappings":"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","sources":["Components/loading_screen/CloseLoadingModal.js","Components/loading_screen/OpenLoadingModal.js","booking_page/BookingPage.jsx","booking_page/CheckModal.jsx","booking_page/Update_modal_pass.jsx","functions/UpdateLocalStorage.js"],"sourcesContent":["\r\n\r\nexport default function closeLoadingModal(){\r\n\r\n    document.querySelector('#loading-screen').style.display=\"none\"\r\n    \r\n    document.querySelector('#loading-screen').style.opacity=\"0\"\r\n    \r\n}","\r\n\r\nexport default function openLoadingModal(){\r\n\r\n    document.querySelector('#loading-screen').style.display=\"flex\"\r\n    const opa = () => document.querySelector('#loading-screen').style.opacity=\"1\"\r\n\r\n    setTimeout(opa, 10)\r\n\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"./bookingPage.css\";\r\nimport \"../admin_page/AdminPage.css\";\r\nimport { db } from \"../firebase-config\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  updateDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport CheckModal from \"./CheckModal\";\r\n// import { BsFillPencilFill } from \"react-icons/bs\";\r\nimport Update_modal_pass from \"./Update_modal_pass\";\r\nimport openLoadingModal from \"../Components/loading_screen/OpenLoadingModal\";\r\nimport closeLoadingModal from \"../Components/loading_screen/CloseLoadingModal\";\r\nimport UpdateLocalStorage from \"../functions/UpdateLocalStorage\";\r\nimport { async } from \"@firebase/util\";\r\nimport { reload } from \"firebase/auth\";\r\n\r\nfunction BookingPage() {\r\n\r\n  const [passKategorier, setPassKategorier] = useState();\r\n  const [maxAntal_STYLE, setmaxAntal_STYLE] = useState({});\r\n\r\n  const [date, setDate] = useState(new Date())\r\n  const [passDenDagen, setPassDenDagen] = useState([])\r\n\r\n  // SÄTTER inloggaUser. DENNA KOMMER UPPDATERAS\r\n  const [inloggadUser, setInloggadUser] = useState(JSON.parse(localStorage.getItem('user')) ? JSON.parse(localStorage.getItem('user')) : '')\r\n\r\n\r\n  const ref = useRef(null);\r\n\r\n\r\n// START: HÄMTAR PASS\r\n\r\n  const passCollectionRef = collection(db, \"pass\");\r\n  const [pass, setPass] = useState([]);\r\n\r\n  const getPass = async () => {\r\n    openLoadingModal()\r\n    const data = await getDocs(passCollectionRef);\r\n    setPass(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n\r\n    closeLoadingModal()\r\n  };\r\n\r\n    // HÄMTAR PASS FÖRSTA GÅNGEN\r\n  const getStaffFirstTime = async () => {\r\n    const data = await getDocs(passCollectionRef);\r\n    setPass(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getStaffFirstTime()\r\n  }, []);\r\n\r\n// END: HÄMTAR PASS\r\n\r\n\r\n// START: HÄMTAR PROFILER\r\n\r\n  const profilerCollectionRef = collection(db, \"profiler\");\r\n  const [profiler, setProfiler] = useState([]);\r\n \r\n  useEffect(() => {\r\n    const getProfiler = async () => {\r\n      const data = await getDocs(profilerCollectionRef);\r\n      setProfiler(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n    };\r\n \r\n    getProfiler();\r\n  }, []);\r\n\r\n// END: HÄMTAR PROFILER\r\n\r\nconst bookPass = async (passId, platser) => {\r\n\r\n  console.log('boka pass körs');\r\n\r\n    openLoadingModal()\r\n        \r\n      // LÄGGER IN PASSET TILL PROFILEN\r\n    const inloggadId = inloggadUser.id\r\n    \r\n    const tidigarePass = inloggadUser.bokadePass\r\n\r\n    const newPassLista = []\r\n\r\n    console.log('tidigarePass: ', tidigarePass, 'tidigarePass.length: ', tidigarePass.length);\r\n\r\n    if (tidigarePass.length !== 0) {\r\n      tidigarePass.map((item, index) => {\r\n        newPassLista.push(item)\r\n      })\r\n    } else {\r\n      newPassLista.push(passId)\r\n    }\r\n\r\n    newPassLista.push(passId)\r\n\r\n    const passDoc = doc(db, 'profiler', inloggadId);\r\n    const newFields = { bokadePass: newPassLista };\r\n    await updateDoc(passDoc, newFields);\r\n\r\n    UpdateLocalStorage(inloggadUser.id)    \r\n\r\n        // LÄGGER TILL +1 TILL PASSET.PLATSER\r\n    \r\n    let newPlatser = 0\r\n\r\n    if (!platser) {\r\n      console.log('platser = false');\r\n      newPlatser = 1\r\n    } else if (platser) {\r\n      newPlatser = platser + 1\r\n    }\r\n\r\n    console.log('newPlatser: ', newPlatser);\r\n\r\n      const staffDoc = doc(db, 'pass', passId)\r\n      const newFieldsPass = {platser: Number(newPlatser)}\r\n      await updateDoc(staffDoc, newFieldsPass)\r\n\r\n    closeLoadingModal()\r\n\r\n    document.querySelector(\"#check-modal\").style.display = \"flex\";\r\n  }\r\n\r\n  // BOKA-KNAPPEN\r\n\r\n  const handleBokaBtn = async (passId, platser, ) => {\r\n\r\n    if (!inloggadUser) alert('go to login / sign up')\r\n    else {\r\n\r\n      let x = 0\r\n\r\n        if (inloggadUser.bokadePass.length !== 0 || !inloggadUser.bokadePass){\r\n            inloggadUser.bokadePass.map((item) => {\r\n              if (passId == item) {\r\n                avbokaPass(passId, platser) \r\n              } else {\r\n                bookPass(passId, platser)\r\n                x = 1\r\n              }\r\n          })\r\n        } else if (x === 0) {\r\n          bookPass(passId, platser)\r\n        } \r\n      \r\n        \r\n      };\r\n\r\n      }\r\n\r\n\r\n// START: UPPDATERAR PASS DATA OCH LOCALSTORAGE\r\n\r\n\r\n\r\n// END: UPPDATERAR PASS DATA OCH LOCALSTORAGE\r\n\r\n\r\n// START: SORTERA PASSEN\r\n\r\n  // PER DAG\r\n  const sortPassDay = (e) => {\r\n    const filteredPass = pass.filter((pass) => {\r\n      return pass.dag == e;\r\n    });\r\n    setPassDenDagen(filteredPass);\r\n    // scrollToPass();\r\n  };\r\n\r\n  // PER KATEGORI\r\n  const sortKategories = (selectedKategori) => {\r\n    const filteredKategoryPass = pass.filter((pass) => {\r\n      return pass.kategori == selectedKategori;\r\n    });\r\n    setPassDenDagen(filteredKategoryPass);\r\n    // scrollToPass();\r\n    setPassKategorier(selectedKategori);\r\n    \r\n  }\r\n  \r\n// END: SORTERA PASSEN\r\n\r\nconst addBokadToPassDenDagen = () => {\r\n\r\n  passDenDagen.map((pass) => {\r\n\r\n  })\r\n}\r\n\r\nuseEffect(() => {\r\n  if (passDenDagen !== 0 || !passDenDagen) {\r\n    addBokadToPassDenDagen()\r\n  }\r\n}, [])\r\n\r\n\r\n// START: AVBOKA PASS \r\n\r\nconst avbokaPass = async (passId, passPlatser) => {\r\n\r\n  let newBokadePass = []\r\n\r\n  inloggadUser.bokadePass.find((item) => {\r\n    if (passId == item) {\r\n    } else {\r\n      newBokadePass.push(item)\r\n    }\r\n  })\r\n\r\n    // UPPDATERAR DATA PROFILER\r\n      const profulerDoc = doc(db, 'profiler', inloggadUser.id);\r\n      const newFields = { bokadePass: newBokadePass,};\r\n      await updateDoc(profulerDoc, newFields);\r\n\r\n      UpdateLocalStorage(inloggadUser.id)\r\n\r\n      passPlatser--\r\n\r\n      // UPPDATERAR DATA PASS\r\n      const passfDoc = doc(db, \"pass\", passId);\r\n      const newFields2 = { platser: passPlatser,};\r\n      await updateDoc(passfDoc, newFields2);\r\n\r\n      document.querySelector(\"#check-modal\").style.display = \"flex\";\r\n\r\n\r\n}\r\n\r\n// END: AVBOKA PASS  \r\n\r\n// SCROLL FUNCTION\r\nconst scrollToPass = () => {\r\n  ref.current?.scrollIntoView({ behavior: \"smooth\" });\r\n};\r\n\r\n\r\n    return (\r\n      <>\r\n        <article className=\"booking-page-container\">\r\n          <div className=\"booking-page-header-desktop\">\r\n            <h1>Boka Pass</h1>\r\n          </div>\r\n          <div className=\"booking-content\">\r\n            <section className='blue-wrapper center'>\r\n        \r\n              <div className=\"booking-page-header-mobile\">\r\n                <h1>Kalender</h1></div>\r\n              <Calendar onChange={setDate} value={date} onClickDay={sortPassDay} />\r\n            </section>\r\n\r\n            <section className='blue-wrapper center'>\r\n              <div className=\"booking-page-header-mobile\"> <h1>Pass</h1> </div>\r\n              <select className='drop-down' name='välj pass' onChange={(e) => sortKategories(e.target.value)}>\r\n                <option value=\"null\">Välj pass</option>\r\n                <option value=\"kondition\">Kondition</option>\r\n                <option value=\"spinning\">Styrka</option>\r\n                <option value=\"styrka\">Crossfit</option>\r\n                <option value=\"flexebilitet\">Funktionell Träning</option>\r\n                <option value=\"mindfullnes\">Mindfullnes</option>\r\n                <option value=\"crossfit\">Crossfit</option>\r\n                <option value=\"funktionell-träning\">Funktionell träning</option>\r\n\r\n              </select>\r\n            \r\n              {passDenDagen.map((pass, index) => {\r\n\r\n                let btn_text = 'Boka'\r\n                let bokadText = 'bokat!'\r\n\r\n                if (inloggadUser) {\r\n                    inloggadUser.bokadePass.map((item) => {\r\n                    if (pass.id === item) {\r\n                      btn_text = 'Avboka'\r\n                      bokadText = 'avbokat'\r\n                    }\r\n                  })\r\n                }\r\n\r\n                \r\n               \r\n                return (\r\n                  <>\r\n                  <CheckModal bokadText={bokadText} />\r\n                    <div key={index} className=\"pass-card center\" ref={ref}>\r\n                      <h2\r\n                        className=\"booking-antal\"\r\n                        style={\r\n                          pass.platser == pass.maxAntal\r\n                            ? { color: \"red\" }\r\n                            : { color: \"white\" }\r\n                        }\r\n                      >\r\n                        {!pass.platser ? 0 : pass.platser}/{pass.maxAntal}\r\n                      </h2>\r\n                      {/* <img clasName='booking-icon' src={require(\"./\"+pass.kategori +\".png\")} alt=\"no img\" height=\"40px\" width=\"30px\"/> */}\r\n                      <div key={Math.random()} className=\"aktv-tid-div\">\r\n                        <h1>{pass.aktivitet}</h1>\r\n                        <p>\r\n                          {pass.dayString}, {pass.dateString} {pass.monthString}{\" \"}\r\n                          <br />\r\n                          {pass.tid}\r\n                        </p>\r\n                      </div>\r\n                      <h2>{pass.instruktör}</h2>\r\n                      <button\r\n                        class=\"myButton booking-btn\"\r\n                        onClick={() =>\r\n                          handleBokaBtn(pass.id, pass.platser)}>\r\n                        {btn_text}\r\n                      </button>\r\n                    </div>\r\n                  </>\r\n                );\r\n              })}\r\n\r\n            </section>\r\n          </div>\r\n        </article>\r\n      </>\r\n    );\r\n  }\r\n\r\n  \r\n\r\nexport default BookingPage;\r\n","import React from 'react'\r\nimport '../booking_page/bookingPage.css'\r\nimport { FaCheck } from \"@react-icons/all-files/fa/FaCheck\";\r\n\r\n\r\nfunction CheckModal({ bokadText }) {\r\n\r\n  console.log('bokadText: ', bokadText);\r\n\r\n    const closeModal = () => {\r\n        window.location.reload()\r\n    }\r\n\r\n  return (\r\n    \r\n    <div id='check-modal'>\r\n        <div className='booking-modal'>\r\n            <FaCheck className='check-icon' />\r\n            <h1>Pass {bokadText}</h1>\r\n            <p>Se dina bokade pass under <a href=\"#\">Min sidor</a></p>\r\n            <button onClick={closeModal}>OK</button>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckModal","import React, { useState } from 'react'\r\nimport '../admin_page/AdminPage.css'\r\nimport { GrFormClose } from \"@react-icons/all-files/gr/GrFormClose\";\r\nimport { db } from '../firebase-config'\r\nimport { collection, getDocs, addDoc, updateDoc, doc, deleteDoc } from 'firebase/firestore'\r\nimport { useEffect } from 'react'\r\nimport Calendar from 'react-calendar';\r\nimport openLoadingModal from '../Components/loading_screen/OpenLoadingModal'\r\nimport closeLoadingModal from '../Components/loading_screen/CloseLoadingModal'\r\n\r\nfunction Update_modal_pass({ id, aktivitet, instruktör, maxAntal, platser, tid, dag, getPass, prevDayString, prevMonthSpring, prevDateString, kategori }) {\r\n\r\n    const [newAktivitet, setNewAktivitet] = useState(aktivitet)\r\n    const [newpassKategori, setNewPassKategori] = useState(kategori)\r\n    const [newInstruktör, setNewInstruktör] = useState(instruktör)\r\n    const [newMaxAntal, setNewMaxAntal] = useState(maxAntal)\r\n    const [newTid, setNewTid] = useState(tid)\r\n    const [newDate, setNewDate] = useState(dag)\r\n    const [date, setDate] = useState('')\r\n\r\n    const [dayString, setDayString] = useState(prevDayString)\r\n    const [monthString, setMonthString] = useState(prevMonthSpring)\r\n    const [dateString, setDateString] = useState(prevDateString)\r\n\r\n// UPPDATERAR DATA\r\n  const updatePass = async (DBcollextion) => {\r\n    openLoadingModal()\r\n    fixDays()\r\n    const staffDoc = doc(db, DBcollextion, id)\r\n    console.log('newAktivitet: ', newAktivitet, 'newInstruktör: ', newInstruktör, 'newMaxAntal: ', newMaxAntal\r\n    , 'newTid: ' ,newTid, 'newDate: ', newDate, 'dayString: ', dayString, 'dateString: ', dateString, 'monthString: ', monthString\r\n    );\r\n    const newFields = {\r\n        aktivitet: newAktivitet, \r\n        instruktör: newInstruktör, \r\n        maxAntal: newMaxAntal,\r\n        tid: newTid,\r\n        dag: String(newDate),\r\n        dateString: dayString,\r\n        dayString: dateString,\r\n        monthString: monthString,\r\n        kategori: newpassKategori\r\n        }\r\n    await updateDoc(staffDoc, newFields)\r\n    getPass()\r\n    closeLoadingModal()\r\n    alert('Pass uppdaterat!')\r\n    closeModal()\r\n  }\r\n\r\n// RADERAR DATA\r\n  const deleteStaff = async (id, DBcollextion) => {\r\n    if (window.confirm('Radera pass?')){\r\n        openLoadingModal()\r\n        const staffDoc = doc(db, DBcollextion, id);\r\n        await deleteDoc(staffDoc);\r\n        getPass()\r\n        closeModal()\r\n        closeLoadingModal()\r\n        \r\n    }\r\n  }\r\n\r\n//\r\n\r\n    const closeModal = () => {\r\n        document.querySelector(`#update-modal-${id}`).style.display=\"none\"\r\n    }\r\n\r\n\r\n    const fixDays = (e) => {\r\n        const date1 = new Date(e)\r\n        const timestamp = date1.getTime()\r\n        const dateTimestamp = new Date(timestamp)\r\n        setDateString(dateTimestamp.getDate())\r\n        setDate(e)\r\n\r\n        let day = \"\"\r\n\r\n        switch (dateTimestamp.getDay()) {\r\n            case 0:\r\n                day = \"Söndag\"\r\n                break;\r\n            case 1:\r\n                day = \"Måndag\"\r\n                break;\r\n            case 2:\r\n                day = \"Tisdag\"\r\n                break;\r\n            case 3:\r\n                day = \"Onsdag\"\r\n                break;\r\n            case 4:\r\n                day = \"Torsdag\"\r\n                break;\r\n            case 5:\r\n                day = \"Fredag\"\r\n                break;\r\n            case 6:\r\n                day = \"Lördag\"\r\n                break;\r\n        }\r\n\r\n        setDayString(day)\r\n\r\n        let month = \"\"\r\n\r\n        switch (dateTimestamp.getMonth()) {\r\n            case 0:\r\n                month = \"Januari\"\r\n                break;\r\n            case 1:\r\n                month = \"Februari\"\r\n                break;\r\n            case 2:\r\n                month = \"Mars\"\r\n                break;\r\n            case 3:\r\n                month = \"April\"\r\n                break;\r\n            case 4:\r\n                month = \"Maj\"\r\n                break;\r\n            case 5:\r\n                month = \"Juni\"\r\n                break;\r\n            case 6:\r\n                month = \"Juli\"\r\n                break;\r\n            case 7:\r\n                month = \"Agusti\"\r\n                break;\r\n            case 8:\r\n                month = \"September\"\r\n                break;\r\n            case 9:\r\n                month = \"Oktober\"\r\n                break;\r\n            case 10:\r\n                month = \"November\"\r\n                break;\r\n            case 11:\r\n                month = \"December\"\r\n                break;\r\n    }\r\n\r\n    setMonthString(month)\r\n   }\r\n\r\n  return (\r\n    <section id={`update-modal-${id}`} className='update-modal-wrapper'>\r\n        <article className='update-modal'>\r\n            <GrFormClose className='close-icon' onClick={closeModal} />\r\n\r\n            <div className='modal-input-wrapper'>\r\n                <h1>Ändra namn på aktivitet:</h1>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder={aktivitet}\r\n                    onChange={(e) => {setNewAktivitet(e.target.value)}}\r\n                    defaultValue={aktivitet} \r\n                />\r\n            </div>\r\n\r\n            <div className='modal-input-wrapper'>\r\n              <h1>Ändra kategori:</h1>\r\n              <select className='drop-down input-select' name='välj pass' onChange={(e) => setNewPassKategori(e.target.value)}>\r\n                <option value=\"\">Välj kategori</option>\r\n                <option value=\"kondition\">Kondition</option>\r\n                <option value=\"spinning\">Spinning</option>\r\n                <option value=\"styrka\">Styrka</option>\r\n                <option value=\"flexebilitet\">Flexebilitet</option>\r\n                <option value=\"mindfullnes\">Mindfullnes</option>\r\n                <option value=\"crossfit\">Crossfit</option>\r\n                <option value=\"funktionell-träning\">Funktionell träning</option>\r\n            </select>\r\n            </div>\r\n\r\n            <div className='modal-input-wrapper'>\r\n                <h1>Ändra instruktör: </h1>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder={instruktör}\r\n                    onChange={(e) => {setNewInstruktör(e.target.value)}}\r\n                    defaultValue={instruktör}\r\n                />\r\n            </div>\r\n\r\n            <div className='center'>\r\n            <p>Dag: </p>\r\n            <Calendar value={date} onClickDay={fixDays}/>\r\n            </div>\r\n\r\n            <div className='modal-input-wrapper'>\r\n                <h1>Ändra tid: </h1>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder={tid}\r\n                    onChange={(e) => {setNewTid(e.target.value)}}\r\n                    defaultValue={tid}\r\n                />\r\n            </div>\r\n\r\n            <div className='modal-input-wrapper'>\r\n                <h1>Ändra maxAntal: </h1>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder={maxAntal}\r\n                    onChange={(e) => {setNewMaxAntal(e.target.value)}}\r\n                    defaultValue={maxAntal}\r\n                />\r\n            </div>\r\n            \r\n            <div className=\"m30\">\r\n                <button onClick={() => {updatePass('pass')}}>Spara</button>\r\n                <button onClick={() => {deleteStaff(id, 'pass')}}>Ta bort pass</button>\r\n            </div>\r\n\r\n        </article>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Update_modal_pass","import { db } from '../firebase-config'\r\nimport { collection, getDocs} from 'firebase/firestore'\r\n\r\nexport default function UpdateLocalStorage(id) {\r\n\r\n    const resetLocalStorage = () => {\r\n        localStorage.removeItem('user')\r\n    }\r\n\r\n    const getToLocalStorage = async () => {\r\n        let profiler = []\r\n        const profilerCollectionRef = collection(db, 'profiler')\r\n\r\n        const data = await getDocs(profilerCollectionRef)\r\n        profiler = (data.docs.map((doc) => ({...doc.data(), id: doc.id })));\r\n\r\n        const updatedProfile = profiler.find((profil) => {\r\n            console.log('profil.id: ', profil.id);\r\n\r\n            return profil.id == id\r\n        })\r\n\r\n        localStorage.setItem('user', JSON.stringify(updatedProfile))\r\n    }\r\n\r\n    resetLocalStorage()\r\n    getToLocalStorage()\r\n}"],"names":["closeLoadingModal","document","querySelector","style","display","opacity","openLoadingModal","setTimeout","useState","setPassKategorier","Date","date","setDate","passDenDagen","setPassDenDagen","JSON","parse","localStorage","getItem","inloggadUser","ref","useRef","passCollectionRef","collection","db","pass","setPass","getStaffFirstTime","getDocs","data","docs","map","doc","id","useEffect","profilerCollectionRef","setProfiler","getProfiler","bookPass","passId","platser","console","log","inloggadId","tidigarePass","bokadePass","newPassLista","length","item","index","push","passDoc","newFields","updateDoc","UpdateLocalStorage","newPlatser","staffDoc","newFieldsPass","Number","handleBokaBtn","x","avbokaPass","alert","passPlatser","newBokadePass","find","profulerDoc","passfDoc","newFields2","className","onChange","value","onClickDay","e","filteredPass","filter","dag","name","selectedKategori","filteredKategoryPass","kategori","sortKategories","target","btn_text","bokadText","maxAntal","color","aktivitet","dayString","dateString","monthString","tid","Math","random","instruktör","class","onClick","href","window","location","reload","getPass","prevDayString","prevMonthSpring","prevDateString","newAktivitet","setNewAktivitet","newpassKategori","setNewPassKategori","newInstruktör","setNewInstruktör","newMaxAntal","setNewMaxAntal","newTid","setNewTid","newDate","setDayString","setMonthString","setDateString","updatePass","DBcollextion","fixDays","String","closeModal","deleteStaff","confirm","deleteDoc","timestamp","getTime","dateTimestamp","getDate","day","getDay","month","getMonth","type","placeholder","defaultValue","getToLocalStorage","profiler","updatedProfile","profil","setItem","stringify","removeItem"],"sourceRoot":""}